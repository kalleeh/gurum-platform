AWSTemplateFormatVersion: '2010-09-09'
Conditions:
  ASGExists:
    Fn::Not:
    - Fn::Equals:
      - Ref: ClusterSize
      - '0'
Description: '

  This template deploys a VPC, with a pair of public and private subnets spread across
  two Availabilty Zones. It deploys an Internet Gateway, with a default route on the
  public subnets. It deploys a pair of NAT Gateways (one in each AZ), and default
  routes for them in the private subnets.

  It then deploys a highly available ECS cluster using an AutoScaling Group, with
  ECS hosts distributed across multiple Availability Zones.

  Last Modified: 11th April 2018 Modified By: Karl Wallbom <wallbomk@amazon.com> Author:
  Paul Maddox <pmaddox@amazon.com>

  '
Parameters:
  ClusterSize:
    Default: 0
    Description: How many ECS hosts do you want to initially deploy?
    Type: Number
Resources:
  ALB:
    Properties:
      Parameters:
        EnvironmentName:
          Ref: AWS::StackName
        Subnets:
          Fn::GetAtt:
          - VPC
          - Outputs.PublicSubnets
        VPC:
          Fn::GetAtt:
          - VPC
          - Outputs.VPC
      TemplateURL: https://s3.amazonaws.com/storage-kalleh/cfn/infrastructure/bcdff99295750531dc10eadb33dc253d.template
    Type: AWS::CloudFormation::Stack
  AppDeploymentRole:
    Properties:
      AssumeRolePolicyDocument: "{\n    \"Statement\": [{\n        \"Action\": \"\
        sts:AssumeRole\",\n        \"Effect\": \"Allow\",\n        \"Principal\":\
        \ {\n            \"Service\": \"cloudformation.amazonaws.com\"\n        }\n\
        \    }]\n}\n"
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/PowerUserAccess
      - arn:aws:iam::aws:policy/IAMFullAccess
      Path: /
      RoleName:
        Fn::Sub: ${AWS::StackName}-AppDeploymentRole-${AWS::Region}
    Type: AWS::IAM::Role
  ECS:
    Properties:
      Parameters:
        ClusterSize:
          Ref: ClusterSize
        EnvironmentName:
          Ref: AWS::StackName
        InstanceType: t2.small
        LoadBalancerSecurityGroup:
          Fn::GetAtt:
          - ALB
          - Outputs.LoadBalancerSecurityGroup
        Subnets:
          Fn::GetAtt:
          - VPC
          - Outputs.PrivateSubnets
        VPC:
          Fn::GetAtt:
          - VPC
          - Outputs.VPC
      TemplateURL: https://s3.amazonaws.com/storage-kalleh/cfn/infrastructure/d0077a87b018e8b5d347058f49c63742.template
    Type: AWS::CloudFormation::Stack
  LifecycleHook:
    Condition: ASGExists
    Properties:
      Parameters:
        Cluster:
          Fn::GetAtt:
          - ECS
          - Outputs.Cluster
        ECSAutoScalingGroupName:
          Fn::GetAtt:
          - ECS
          - Outputs.ECSAutoScalingGroupName
      TemplateURL: https://s3.amazonaws.com/storage-kalleh/cfn/infrastructure/e21df873cc7d465613106be530dbb61a.template
    Type: AWS::CloudFormation::Stack
  ServiceDiscovery:
    Properties:
      Parameters:
        NamespaceName:
          Fn::GetAtt:
          - ECS
          - Outputs.Cluster
        VPC:
          Fn::GetAtt:
          - VPC
          - Outputs.VPC
      TemplateURL: https://s3.amazonaws.com/storage-kalleh/cfn/infrastructure/33fc9468e99810bcd14621ca8e597e51.template
    Type: AWS::CloudFormation::Stack
  VPC:
    Properties:
      Parameters:
        EnvironmentName:
          Ref: AWS::StackName
        PrivateSubnet1CIDR: 10.180.24.0/21
        PrivateSubnet2CIDR: 10.180.32.0/21
        PublicSubnet1CIDR: 10.180.8.0/21
        PublicSubnet2CIDR: 10.180.16.0/21
        VpcCIDR: 10.180.0.0/16
      TemplateURL: https://s3.amazonaws.com/storage-kalleh/cfn/infrastructure/0ff7fcee0f45d3950515460c46a8b6bc.template
    Type: AWS::CloudFormation::Stack
