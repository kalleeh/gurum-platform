# This is a sample, non-production-ready template.
#
# © 2019 Amazon Web Services, In​c. or its affiliates. All Rights Reserved.
#
# This AWS Content is provided subject to the terms of the
# AWS Customer Agreement available at http://aws.amazon.com/agreement
# or other written agreement between Customer and either
# Amazon Web Services, Inc. or Amazon Web Services EMEA SARL or both.

AWSTemplateFormatVersion: "2010-09-09"
Description: >

    This template deploys the Gureume Platform Infrastructure together
    with the necessary exports for the Gureume Management API to integrate
    correctly.

    Modified By: Karl Wallbom <wallbomk@amazon.com>
    Author: Paul Maddox <pmaddox@amazon.com>

Parameters:

    PlatformDomainName:
        Description: Base-domain name for applications running in the platform.
        Type: String
        Default: "apps.gureu.me"

    ServiceDiscoveryDomainName:
        Description: Local service discovery DNS.
        Type: String
        Default: "gureume.local"

    # Defines if the template should create EC2 instances in the ECS cluster.
    # Leave this at 0 if you plan to only use Fargate.
    ClusterSize:
        Description: How many ECS hosts do you want to initially deploy?
        Type: Number
        Default: 0

Conditions:

    ASGExists:
        !Not [!Equals [!Ref ClusterSize, "0"]]

Resources:

    VPC:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: platform-cfn/vpc.yaml
            Parameters:
                EnvironmentName:    !Ref AWS::StackName
                VpcCIDR:            10.180.0.0/16
                PublicSubnet1CIDR:  10.180.8.0/21
                PublicSubnet2CIDR:  10.180.16.0/21
                PrivateSubnet1CIDR: 10.180.24.0/21
                PrivateSubnet2CIDR: 10.180.32.0/21

    ALB:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: platform-cfn/load-balancers.yaml
            Parameters:
                DomainName: !Ref PlatformDomainName
                EnvironmentName: !Ref AWS::StackName
                VPC: !GetAtt VPC.Outputs.VPC
                Subnets: !GetAtt VPC.Outputs.PublicSubnets

    ECS:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: platform-cfn/ecs-cluster.yaml
            Parameters:
                EnvironmentName: !Ref AWS::StackName
                InstanceType: t2.small
                ClusterSize: !Ref ClusterSize
                VPC: !GetAtt VPC.Outputs.VPC
                Subnets: !GetAtt VPC.Outputs.PrivateSubnets
                LoadBalancerSecurityGroup: !GetAtt ALB.Outputs.LoadBalancerSecurityGroup

    LifecycleHook:
        Type: AWS::CloudFormation::Stack
        Condition: ASGExists
        Properties:
            TemplateURL: platform-cfn/lifecyclehook.yaml
            Parameters:
                Cluster: !GetAtt ECS.Outputs.Cluster
                ECSAutoScalingGroupName: !GetAtt ECS.Outputs.ECSAutoScalingGroupName

    ServiceDiscovery:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: platform-cfn/service-discovery.yaml
            Parameters:
                NamespaceName: !Ref ServiceDiscoveryDomainName
                VPC: !GetAtt VPC.Outputs.VPC

Outputs:

    PlatformDomainName:
        Description: Base-domain name for applications running in the platform.
        Value: !Ref PlatformDomainName
        Export:
          Name: PlatformDomainName

    ServiceDiscoveryDomainName:
        Description: Local service discovery DNS.
        Value: !Ref ServiceDiscoveryDomainName
        Export:
          Name: ServiceDiscoveryDomainName