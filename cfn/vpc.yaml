AWSTemplateFormatVersion: '2010-09-09'
Description: AWS Minimum Security Baseline (MSB) - Standard VPC Template
  - Deploys a VPC, with a pair of public and private subnets spread
  across one,two or three Availability Zones. It deploys an Internet Gateway, with a default
  route on the public subnets. It deploys a pair of NAT Gateways (one in each AZ),
  and default routes for them in the private subnets.

Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String

  VpcCIDR:
    Description: VPC CIDR Block
    Type: String
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Default: 10.180.0.0/16

  PublicSubnet1CIDR:
    Description: PublicSubnet1CIDR Block
    Type: String
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Default: 10.180.0.0/21

  PublicSubnet2CIDR:
    Description: PublicSubnet2CIDR Block
    Type: String
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Default: 10.180.8.0/21

  PublicSubnet3CIDR:
    Description: PublicSubnet3CIDR CIDR Block
    Type: String
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Default: 10.180.16.0/21

  PrivateSubnet1CIDR:
    Description: PrivateSubnet1CIDR Block
    Type: String
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Default: 10.180.24.0/21

  PrivateSubnet2CIDR:
    Description: PrivateSubnet2CIDR Block
    Type: String
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Default: 10.180.32.0/21

  PrivateSubnet3CIDR:
    Description: PrivateSubnet3CIDR Block
    Type: String
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Default: 10.180.40.0/21

  DeployAZTwo:
    Description: VPC deployed in 2nd Availability Zone
    Type: String
    Default: true
    AllowedValues: [true, false]

  DeployAZThree:
    Description: VPC deployed in 3rd Availability Zone
    Type: String
    Default: true
    AllowedValues: [true, false]

Conditions:
  DeployAZOne: !Or [ !Not [Condition: DeployAZTwo], !Not [Condition: DeployAZThree] ]
  DeployAZTwo: !Equals [!Ref DeployAZTwo, true]
  DeployAZThree: !Equals [!Ref DeployAZThree, true]

Resources:
  ############################
  #            VPC           #
  ############################

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet1CIDR
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-public-1

  PublicSubnet2:
    Condition: DeployAZTwo
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [1, !GetAZs '']
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet2CIDR
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-public-2

  PublicSubnet3:
    Condition: DeployAZThree
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [2, !GetAZs '']
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet3CIDR
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-public-3

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet1CIDR
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-private-1

  PrivateSubnet2:
    Condition: DeployAZTwo
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [1, !GetAZs '']
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet2CIDR
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-private-2

  PrivateSubnet3:
    Condition: DeployAZThree
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [2, !GetAZs '']
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet3CIDR
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-private-3

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  ElasticIPNatGateway1:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  NatGatewayAZ1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt ElasticIPNatGateway1.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-nat-1

  ElasticIPNatGateway2:
    Condition: DeployAZTwo
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  NatGatewayAZ2:
    Condition: DeployAZTwo
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt ElasticIPNatGateway2.AllocationId
      SubnetId: !Ref PublicSubnet2
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-nat-2

  ElasticIPNatGateway3:
    Condition: DeployAZThree
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  NatGatewayAZ3:
    Condition: DeployAZThree
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt ElasticIPNatGateway3.AllocationId
      SubnetId: !Ref PublicSubnet3
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-nat-3

  ############################
  #        VPC Routes        #
  ############################

  # Public Routes
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-public-route-table

  PublicSubnet1RouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2RouteTableAssoc:
    Condition: DeployAZTwo
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet3RouteTableAssoc:
    Condition: DeployAZThree
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet3
      RouteTableId: !Ref PublicRouteTable

  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  # Private Routes AZ 1
  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-private-route-table1

  PrivateSubnet1RouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable1

  PrivateRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayAZ1

  # Private Routes AZ 2
  PrivateRouteTable2:
    Condition: DeployAZTwo
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-private-route-table-2

  PrivateSubnet2RouteTableAssoc:
    Condition: DeployAZTwo
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable2

  PrivateRoute2:
    Condition: DeployAZTwo
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayAZ2

  # Private Routes AZ 3
  PrivateRouteTable3:
    Condition: DeployAZThree
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-private-route-table-3

  PrivateSubnet3RouteTableAssoc:
    Condition: DeployAZThree
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet3
      RouteTableId: !Ref PrivateRouteTable3

  PrivateRoute3:
    Condition: DeployAZThree
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable3
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayAZ3

  ############################
  #      SSM Parameters      #
  ############################

  VPCParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /gurum/platform/vpc
      Type: String
      Value: !Ref VPC
      Description: Gurum Platform VPC ID.

  PublicSubnetsParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /gurum/platform/subnets/public
      Type: StringList
      Value:
        !If [ DeployAZOne, !Ref PublicSubnet1,
          !If [ DeployAZTwo, !Join [',', [!Ref PublicSubnet1, !Ref PublicSubnet2]],
            !If [ DeployAZThree, !Join [',', [!Ref PublicSubnet1, !Ref PublicSubnet2, !Ref PublicSubnet3]], AWS::NoValue ]]]
      Description: Gurum Platform Public Subnets.

  PrivateSubnetsParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /gurum/platform/subnets/private
      Type: StringList
      Value:
        !If [ DeployAZOne, !Ref PrivateSubnet1,
          !If [ DeployAZTwo, !Join [',', [!Ref PrivateSubnet1, !Ref PrivateSubnet2]],
            !If [ DeployAZThree, !Join [',', [!Ref PrivateSubnet1, !Ref PrivateSubnet2, !Ref PrivateSubnet3]], AWS::NoValue ]]]
      Description: Gurum Platform Private Subnets.

Outputs:
  VpcId:
    Description: VPC ID of Standard VPC
    Value: !Ref VPC
    Export:
      Name: !Sub '${EnvironmentName}-vpc'

  PublicSubnets:
    Description: A list of the public subnets
    Value:
      !If [ DeployAZOne, !Ref PublicSubnet1,
        !If [ DeployAZTwo, !Join [',', [!Ref PublicSubnet1, !Ref PublicSubnet2]],
          !If [ DeployAZThree, !Join [',', [!Ref PublicSubnet1, !Ref PublicSubnet2, !Ref PublicSubnet3]], AWS::NoValue ]]]

  PrivateSubnets:
    Description: A list of the private subnets
    Value:
      !If [ DeployAZOne, !Ref PrivateSubnet1,
        !If [ DeployAZTwo, !Join [',', [!Ref PrivateSubnet1, !Ref PrivateSubnet2]],
          !If [ DeployAZThree, !Join [',', [!Ref PrivateSubnet1, !Ref PrivateSubnet2, !Ref PrivateSubnet3]], AWS::NoValue ]]]
